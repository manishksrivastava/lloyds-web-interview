{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Manish\\\\Documents\\\\Projects\\\\LBG test\\\\lloyds-web-interview\\\\src\\\\Autocomplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchSuggestions } from \"./utils/api\";\nimport \"./Autocomplete.css\";\n\nfunction Autocomplete() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    console.log('useEffect', searchTerm);\n    fetchSuggestions(searchTerm).then(_suggestions => setSuggestions(_suggestions)); // console.log('useEffect',suggestions)   \n  }, [searchTerm]);\n\n  const setSuggestion = suggestion => {\n    setSearchTerm(suggestion.title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      className: \"search-box\",\n      placeholder: \"Search for a product\",\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), suggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"suggestions\",\n      children: suggestions.map((suggestion, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSuggestion(suggestion),\n          children: suggestion.title\n        }, suggestion.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Autocomplete, \"lvOzVaaIM41HaEXjSuOScEiXnYQ=\");\n\n_c = Autocomplete;\nexport default Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["C:/Users/Manish/Documents/Projects/LBG test/lloyds-web-interview/src/Autocomplete.js"],"names":["React","useEffect","useState","fetchSuggestions","Autocomplete","searchTerm","setSearchTerm","suggestions","setSuggestions","console","log","then","_suggestions","setSuggestion","suggestion","title","e","target","value","map","index","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,oBAAP;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBL,UAAxB;AACAF,IAAAA,gBAAgB,CAACE,UAAD,CAAhB,CAA6BM,IAA7B,CAAmCC,YAAD,IAChCJ,cAAc,CAACI,YAAD,CADhB,EAFc,CAKf;AACA,GANQ,EAMN,CAACP,UAAD,CANM,CAAT;;AAQA,QAAMQ,aAAa,GAAEC,UAAU,IAAE;AAC/BR,IAAAA,aAAa,CAACQ,UAAU,CAACC,KAAZ,CAAb;AACD,GAFD;;AAGA,sBAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEV,UAFT;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,WAAW,EAAC,sBAJd;AAKE,MAAA,QAAQ,EAAGW,CAAD,IAAOV,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,YADF,EAQGX,WAAW,iBAET;AAAI,MAAA,KAAK,EAAC,aAAV;AAAA,gBACIA,WAAW,CAACY,GAAZ,CAAgB,CAACL,UAAD,EAAaM,KAAb,KAAuB;AAEtC,4BACE;AAAyB,UAAA,OAAO,EAAE,MAAIP,aAAa,CAACC,UAAD,CAAnD;AAAA,oBACGA,UAAU,CAACC;AADd,WAAUD,UAAU,CAACO,EAArB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAPA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA6BD;;GA7CQjB,Y;;KAAAA,Y;AAiDT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { fetchSuggestions } from \"./utils/api\";\n\nimport \"./Autocomplete.css\";\n\nfunction Autocomplete() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n \n\n  useEffect(() => {\n    console.log('useEffect',searchTerm)\n    fetchSuggestions(searchTerm).then((_suggestions) =>\n      setSuggestions(_suggestions)\n    );\n   // console.log('useEffect',suggestions)   \n  }, [searchTerm]);\n  \n  const setSuggestion= suggestion=>{\n    setSearchTerm(suggestion.title)\n  }\n  return (\n \n    <div className=\"search-container\">\n      <input\n        type=\"text\"\n        value={searchTerm}\n        className=\"search-box\"\n        placeholder=\"Search for a product\"\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />  \n      {suggestions &&(\n         \n         <ul class=\"suggestions\">\n            {suggestions.map((suggestion, index) => {\n              \n              return (\n                <li  key={suggestion.id} onClick={()=>setSuggestion(suggestion)}>\n                  {suggestion.title}\n                </li>\n              );\n            })}\n          </ul>\n\n\n      )}     \n    </div>\n   \n    \n  );\n}\n\n\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}
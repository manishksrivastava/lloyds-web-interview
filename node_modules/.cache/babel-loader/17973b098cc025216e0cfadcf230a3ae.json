{"ast":null,"code":"export const fetchSuggestions = searchTerm => {\n  return fetch(`http://localhost:3001/search?q=${searchTerm}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(response.statusText);\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const fetchProductDetail = id => {\n  fetch(`http://localhost:3001/products/${id}`).then(response => {\n    if (response.ok) {\n      return {\n        errorMessage: '',\n        result: response.json()\n      };\n    } else {\n      return {\n        errorMessage: response.statusText,\n        result: []\n      };\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["C:/Users/Manish/Documents/Projects/LBG test/lloyds-web-interview/src/utils/api.js"],"names":["fetchSuggestions","searchTerm","fetch","then","response","ok","json","Error","statusText","catch","error","console","log","fetchProductDetail","id","errorMessage","result"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAIC,UAAD,IAAgB;AAC9C,SAAOC,KAAK,CAAE,kCAAiCD,UAAW,EAA9C,CAAL,CACNE,IADM,CACAC,QAAD,IAAY;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,KAFD,MAEO;AACL,YAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD;AAGF,GATM,EAUNC,KAVM,CAUCC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAZM,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMG,kBAAkB,GAAIC,EAAD,IAAQ;AACvCZ,EAAAA,KAAK,CAAE,kCAAiCY,EAAG,EAAtC,CAAL,CACAX,IADA,CACMC,QAAD,IAAY;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAO;AAACU,QAAAA,YAAY,EAAC,EAAd;AAAkBC,QAAAA,MAAM,EAACZ,QAAQ,CAACE,IAAT;AAAzB,OAAP;AACD,KAFD,MAEO;AACL,aAAO;AAACS,QAAAA,YAAY,EAACX,QAAQ,CAACI,UAAvB;AAAmCQ,QAAAA,MAAM,EAAC;AAA1C,OAAP;AACD;AAEF,GARA,EASAP,KATA,CASOC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAXA;AAYF,CAbM","sourcesContent":["export const fetchSuggestions = (searchTerm) => {\n  return fetch(`http://localhost:3001/search?q=${searchTerm}`)\n  .then((response)=>{\n    if (response.ok) {      \n      return response.json()\n    } else {\n      throw new Error(response.statusText);\n    }\n   \n\n  })\n  .catch((error) => {\n    console.log(error)\n  });\n};\n\nexport const fetchProductDetail = (id) => {\n   fetch(`http://localhost:3001/products/${id}`)\n  .then((response)=>{\n    if (response.ok) {      \n      return {errorMessage:'', result:response.json()}\n    } else {\n      return {errorMessage:response.statusText, result:[]}\n    }\n\n  })\n  .catch((error) => {\n    console.log(error)\n  });\n};\n"]},"metadata":{},"sourceType":"module"}